{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","undefined","sortField","setSortField","isReverse","setIsReversed","visibleGoods","goods","IsReverse","preparedGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","reverse","getPreparedGoods","className","type","onClick","cn","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,K,oBAAAA,E,iBAAAA,M,KAKE,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgCK,IAAMC,EAAgB,WAC3B,MAAkCC,wBAA+BC,GAAjE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAmCH,oBAAS,GAA5C,mBAAOI,EAAP,KAAkBC,EAAlB,KACMC,EAhCR,SACEC,EACAL,GAEW,IADXM,EACU,wDACJC,EAAa,YAAOF,GAqB1B,OAnBIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKL,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXR,GACFC,EAAcQ,UAGTR,EAMcS,CAAiBpB,EAAiBI,EAAWE,GAOlE,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMlB,EAAaN,EAASgB,WACrCM,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYpB,IAAcL,EAASgB,WAJvC,iCAUA,wBACEO,KAAK,SACLC,QAAS,kBAAMlB,EAAaN,EAASkB,SACrCI,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYpB,IAAcL,EAASkB,SAJvC,4BAUA,wBACEK,KAAK,SACLC,QAAS,kBAAMhB,GAAc,SAAAkB,GAAI,OAAKA,MACtCJ,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAalB,IAJjB,sBAWGF,GAAaE,IACZ,wBACEiB,QAzCZ,WACElB,OAAaF,GACbI,GAAc,IAwCJe,KAAK,SACLD,UAAU,4BAHZ,sBAWN,6BAEIb,EAAakB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3G3DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c644936.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(\n  goods : string[],\n  sortField: SortType | undefined,\n  IsReverse = false,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.Alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (IsReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType | undefined>(undefined);\n  const [isReverse, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, isReverse);\n\n  function reset() {\n    setSortField(undefined);\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.Alphabet)}\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortType.Alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.Length)}\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortType.Length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(prev => !prev)}\n          className={cn('button', 'is-warning', {\n            'is-light': !isReverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortField || isReverse) && (\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => <li data-cy=\"Good\" key={good}>{good}</li>)\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}